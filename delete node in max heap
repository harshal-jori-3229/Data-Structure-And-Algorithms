function heapify(heap, i){
    let size = heap.length;
    
    while(true){
        let largest = i;
        let left = 2 * i + 1;
        let right = 2 * i +2;
        
        if(left < size && heap[left] > heap[largest]){
            largest = left;
        }
        
        if(right < size && heap[right] > heap[largest]){
            largest = right;
        }
        
        if(largest != i){
            [heap[largest], heap[i]] = [heap[i], heap[largest]];
            i = largest;
        }else{
            break;
        }
    }
}

function deleteMax(heap) {
    if (heap.length === 0) return null;
    
    let max = heap[0];
    heap[0] = heap[heap.length - 1];
    
    heap.pop();
    
    heapify(heap, 0);
    return max;
}

let heap = [50, 36, 40, 30, 20, 35, 25, 10];
console.log("Before Deletion:", heap);

let deleted = deleteMax(heap);
console.log("Deleted:", deleted);

console.log("After Deletion: ", heap);
