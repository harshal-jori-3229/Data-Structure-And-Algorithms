/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} head
 * @return {boolean}
 */



var isPalindrome = function(head) {
    let temp = head;
    let slow = temp;
    let fast = temp;
    while(fast !== null && fast.next !== null){
        fast = fast.next.next;
        slow = slow.next;
    }
    let secondhalfhead = reverseList(slow);

    function reverseList(head){
        let prev = null;
        let temp = head;
        let next = null;
        while(temp !== null){
            next = temp.next;
            temp.next = prev;
            prev = temp;
            temp = next;
        }
        return prev;
    }

    let firsthalf = head;
    let secondhalf = secondhalfhead;

    while(secondhalf !== null){
        if(firsthalf.val !== secondhalf.val){
            return false;
        }
        firsthalf = firsthalf.next;
        secondhalf = secondhalf.next;
    }
    
    return true;
};
